{"version":3,"sources":["components/Rect.js","components/Line.js","components/LookupTable.js","actions/search.js","components/svgField.js","power/longestPrefixFilter.js","App.js","serviceWorker.js","power/dijsktra.js","power/build-star-subnet.js","reducers/index.js","index.js"],"names":["dims","type","Rect","_ref","routerType","x","y","color","info","click","react_default","a","createElement","onClick","rx","ry","width","height","stroke","fill","strokeWidth","Line","before","after","offset","key","_id","x1","y1","x2","y2","style","LookupTable","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","active","document","body","getBoundingClientRect","className","top","concat","loc","left","bubble","colSpan","name","els","_","mapKeys","item","push","tabledata","table","Component","SEARCH_PERFORMED","PERFORMED","animateAction","toFrom","curr","current","data","animating","doneAnimating","SvgField","findNextRouter","bind","assertThisInitialized","synchronousAnimate","animateOneStep","connectionInfo","routers","LinesToggle","tableShown","holder","dontInterrupt","locale","routerarr","forEach","el","index","setState","console","log","_this2","lines","stats","value","map","connections","conn","connObj","components_Line","ROUTERWIDTH","_this3","legends","mapValues","o","conns","count","length","Date","now","components_Rect","TABLE_DIMS","fontFamily","fontSize","renderConnTexts","router","location","texts","JSON","stringify","routerDict","labels","localTable","addToGroup","_this4","classes","showTable","_this5","components_LookupTable","dickstra","isSelected","message","routingMap","next","startsWith","resetField","nextHop","self","setTimeout","prevProps","initiated","id","renderLines","renderNodes","renderTables","connect","search","objectSpread","dispatch","arr","flipOpposite","opposite","flip","startPoint","newTable","prefixs","wildCard","stringArr","str","optimizeOnesStrings","parentKey","reverse","combinePrefixWithKey","assign","reverseOneLookUpTable","filterOneLookUpTable","one","String","FilterAll","_callee","lotsofdata","regenerator_default","wrap","_context","prev","routTable","abrupt","stop","_callee2","callback","newTables","_context2","sent","filterDickstraTable","App","doneComputing","lookup","listening","setDoneComp","numSelected","fromTo","animate","svgField","addToAnimateList","field","listenForTwo","htmlFor","Boolean","window","hostname","match","graph","layout","R","2","3","4","5","6","7","8","9","10","11","12","13","14","15","aid","pi","Math","PI","randomDistance","dist","floor","random","dcopy","val","newarr","Array","isArray","i","randint","beg","end","num","addVectors","b","newarry","multiplyScalar","subnet","theta_i","theta_f","amount","arguments","undefined","identity","Infinity","addresses","seprtn_max","cluster","radius","pos","axis","array","r","addr","parse","cords","cos","sin","prefix","Number","parentRouter","amount_subnet","pos_","t_i","t_f","net","setCluster","temp","setPrefixies","export","star","_pos","anchor","center","anch","star_points","star_radius","createSubnet","addConnection","setAnchor","connectAnchor","anchorAddress","split","setPrefix","connectionType","num1","num2","initialState","combineReducers","Rooms","action","term","searchTerm","store","createStore","reducer","applyMiddleware","createLogger","LOCALE_DATA","stars","setAllAddresses","buildStars","connDict","formatForDijkstra","s","solutions","parent","nearest","n","ndist","adj","d","solve","join","turnStarsIntoRouters","rooms","ReactDOM","render","es","src_App_0","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.ec8f1045.chunk.js","sourcesContent":["import React from \"react\";\nimport \"../power/main.css\"\n\nfunction dims(type){\n  switch(type){\n    case \"anchor\":\n      return 50;\n    case \"parent\":\n     return 30;\n    case \"subnet\":\n      return 15;\n    default:\n     return 20;\n  }\n}\n\nconst Rect = ( { routerType, x, y, color, info,click} ) => {\n  return (\n    <rect onClick={() => { click(info)} } x={x} y={y} rx=\"10\" ry=\"10\"\n    width={dims(routerType)} height={dims(routerType)} stroke={color}\n    fill=\"transparent\" strokeWidth=\"5\" />\n  )\n}\n\nexport default Rect;\n","import React from 'react'\n\n\nconst Line = ({before,after,offset}) => {\n\n\n  return(\n    <line\n    key={before._id+after._id}\n    x1={before[0]+offset} y1={before[1]+offset} x2={after[0]+offset} y2={after[1]+offset}\n    style={{ stroke:\"rgb(255,0,0)\",strokeWidth:2}} />\n  );\n}\n\n\nexport default Line;\n","import React, {Component} from \"react\";\nimport _ from \"lodash\";\n\n\nfunction tabledata(props){\n  var els = [];\n  // _.mapKeys(props.routTable, (item,key)=>{\n  //   els.push([key.toString(),item]);\n  // })\n  // return _.map(els,(item)=>{\n  //   return (\n  //       <tr key={\"\"+item[0]+item[1]}>\n  //       <td>{item[0]}</td>\n  //       <td>{item[1]}</td>\n  //       </tr>\n  //     );\n  // })\n  _.mapKeys(props, (item,key)=>{\n    els.push((\n        <tr key={\"\"+key+item}>\n        <td>{key}</td>\n        <td>{item}</td>\n        </tr>\n      ))\n  });\n  return els;\n}\n\nclass LookupTable extends Component {\n\n  constructor(props){\n    super(props);\n    this.state={active: null};\n  }\n\n  render(){\n    const scale=15;\n    var {width} = document.body.getBoundingClientRect();\n    const bubble=20;\n    return(\n      <table className={\"lookup\"}\n        style={{ top: `${this.props.loc.y*scale+500+bubble}px`,  left: `${this.props.loc.x*scale+width/2+bubble*1.25}px`,\n         height:(20+15*5)+`px`}}>\n        <thead>\n          <tr>\n            <th colSpan={\"2\"}>{this.props.name}</th>\n          </tr>\n          <tr>\n            <th>Prefix</th>\n            <th>Next Hop</th>\n          </tr>\n        </thead>\n        <tbody>\n        {tabledata(this.props.table)}\n        </tbody>\n      </table>\n    )\n\n\n\n  }\n}\n\n\nexport default LookupTable;\n","export const SEARCH_PERFORMED= \"SEARCHING\";\nexport const SEARCH_SUCCESS = \"SEARCH_SUCC\";\nexport const SEARCH_ERROR = \" SEARCH_ERR\";\nexport const PERFORMED = \"MAKING REQUEST\"\nexport const searchError= (error) => ({type: SEARCH_ERROR, error});\n\n\nexport const animateAction = (toFrom,curr) =>{\n\n  return{\n    type: PERFORMED,\n    current: curr,\n    data: toFrom,\n    animating: true,\n  }\n}\n\nexport const doneAnimating = () => {\n  return {\n    type: SEARCH_SUCCESS,\n    animating: false,\n  }\n}\nexport const performSearch = (searchTerm) => async dispatch => {\n\n\n  const res = {}\n\n    if(res.data){\n      dispatch({\n        type: SEARCH_SUCCESS,\n        payload:  res.data\n      });\n    }\n    else{\n      dispatch({\n        type: SEARCH_ERROR,\n        payload: \"something went wrong\"\n      })\n    }\n\n}\n","import React, {Component} from \"react\";\nimport _ from \"lodash\";\nimport Rect from \"./Rect\";\nimport Line from \"./Line\"\nimport LookupTable from \"./LookupTable\";\nimport {connect} from 'react-redux';\nimport {ROUTERWIDTH} from \"../data/nodes\";\nimport {animateAction,doneAnimating} from \"../actions/search\"\nimport {PERFORMED} from \"../actions/search\"\n// import { NODE_INFO, ROUTERWIDTH, NODE_LINKS} from \"../data/nodes\";\n\n\n\n/* This local component in the /src/componenets folder\nWill use the csv file (live object data actually .js)\n\n*/\nclass SvgField extends Component {\n  constructor(props){\n    super(props);\n    // combine the two dictionarys in the props\n    this.findNextRouter =this.findNextRouter.bind(this);\n    this.synchronousAnimate = this.synchronousAnimate.bind(this);\n    this.animateOneStep = this.animateOneStep.bind(this);\n    this.connectionInfo = this.props.routers;\n      this.state={\n      LinesToggle:false,\n      tableShown: {},\n      holder: null,\n      dontInterrupt: false,\n    }\n  }\n  componentDidMount(){\n    let locale = this.state.tableShown;\n    this.props.routerarr.forEach( (el,index)=>{\n      locale[el.name]=0;\n    });\n    this.setState({\n      tableShown:locale\n    })\n    console.log(this.state.tableShown);\n  }\n  //connect sthe rects with lines\n  renderLines(){\n    var lines=[];\n    var stats = document.body.getBoundingClientRect();\n    var scale=15;\n    var widthOffset=0;\n    _.mapKeys(this.connectionInfo,(value,key)=>{\n      // for each item in the dictary, iteratve over the array \"connections\"\n      _.map(value.connections,(conn)=>{\n        var connObj=this.connectionInfo[conn];\n        lines.push(\n            <Line key={\"\"+value.name+conn}\n              before={[value.loc.x*scale+stats.width/2,value.loc.y*scale+500]}\n              after={[connObj.loc.x*scale+stats.width/2,connObj.loc.y*scale+500-widthOffset]}\n              offset={ROUTERWIDTH/2} />\n        );\n      });\n  });\n\n    return lines;\n  }\n  // creates legends with connections indicatingthe routing tables\n  renderRouterLegends(){\n    // now we just need the connections, color, and name\n    var legends = []\n    _.mapValues(this.connectionInfo, (o)=>{\n      legends.push(\n        {\n          color:o.color,\n          name: o.name,\n          conns:o.connections\n        }\n      );\n    });\n    var loc={\n      x:30,\n      y: 15\n    }\n    var count=0;\n    return(\n      <g>\n        {  _.map(legends,\n          (item)=>{\n            console.log(\"current y: \",loc.y);\n            if(item.name.length<4){\n              let table =(\n                <g\n                key={\"\"+loc.x+loc.y+Date.now()} >\n                <Rect dims={this.props.TABLE_DIMS} y={loc.y} x={loc.x} color={item.color}/>\n                <text x={loc.x+15} y={loc.y+15}\n                fontFamily=\"sans-serif\" fontSize=\"12px\" fill=\"grey\">{item.name}</text>\n                <text x={loc.x+15} y={loc.y+30}\n                fontFamily=\"sans-serif\" fontSize=\"9px\" fill=\"grey\">Connections:</text>\n                {this.renderConnTexts(item,loc)}\n                </g>\n              );\n              loc.x+=this.props.TABLE_DIMS+15;\n              if(count>6){\n                count=0;\n                loc.x=30;\n                loc.y+=this.props.TABLE_DIMS+20\n                console.log(\"next row:\");\n              }\n              else{\n                count++;\n              }\n              return table;\n            }\n        })\n      }\n      </g>\n    )\n  }\n  renderConnTexts(router,location){\n    var texts=[];\n    var y = location.y;\n    router.conns.forEach((item,index)=>{\n      texts.push(\n        (<text key={JSON.stringify(item)} x={location.x+25} y={y+40}\n          fontFamily=\"sans-serif\" fontSize=\"8px\" fill=\"grey\">\n        {JSON.stringify(item)}\n        </text>\n      ));\n      y+=15;\n    })\n    return texts;\n  }\n  // map the connectoins\n\n  renderLabels(){\n\n    var routerDict=this.connectionInfo;\n    console.log(this.connectionInfo);\n    var labels = [];\n    _.mapKeys(this.connectionInfo,(value,key)=>{\n      return _.map(value.connections,(conn)=>{\n        var connObj=routerDict[conn[0]];\n        labels.push(\n          <text\n            key={\"\"+value.x+connObj.x+value.y+connObj.y+\"asdf\"}\n            x={value.x+(connObj.x-value.x)/2} y={value.y+(connObj.y-value.y)/2-15}\n            fontFamily=\"sans-serif\" fontSize=\"8px\" fill=\"grey\">\n            {conn[1]}\n          </text>);\n      });\n    });\n    return labels;\n  }\n  showTable(info){\n    let localTable = this.state.tableShown;\n    localTable[info.name]=!this.state.tableShown[info.name];\n    this.setState({\n      tableShown: localTable\n    })\n    this.props.addToGroup(info);\n  }\n\n  renderNodes(){\n    //will be difficults. need color and locations and names\n    var stats = document.body.getBoundingClientRect();\n    const scale=15;\n   return _.map(this.props.routerarr, (router)=>{\n       var classes=\"\";\n       var color =  this.state.tableShown[router.name] ? '#ffbf00' : \"#242424\";\n\n       switch(router.name.length){\n         case 1:\n         classes+=\"anchor\";\n           break;\n         case 3:\n         classes+=\"parent\";\n           break;\n         case 5:\n           classes+=\"subnet\";\n           break;\n          default:\n          break;\n       }\n       return (\n         <g key={router.name+\"gorup\"}>\n           <Rect click={ ()=> this.showTable(router)} routerType={classes} key={router.name}\n             x={router.loc.x*scale+stats.width/2}\n             y={router.loc.y*scale+500} color={color} />\n          </g>\n         );\n     });\n  }\n  renderTables(){\n      return _.map(this.props.routerarr, (router)=>{\n        if(this.state.tableShown[router.name])\n          return (\n              <LookupTable loc={router.loc} name={router.name+\" Next Hop Table\"} key={router.name+\"Next Hop Table\"}\n              table={this.props.dickstra[router.name]} isSelected={this.state.tableShown[router.name]} />\n          );\n        else {\n          return;\n        }\n        });\n  }\n\n  findNextRouter(curr,message){\n\n    var routingMap = this.props.dickstra[curr.name];\n    var next = null;\n    // console.log(\"current: \",curr, \"does it NOT exist? \",(!routingMap[curr.name]));\n    console.log(`routing table for : `,curr, routingMap);\n    // first use the starts with thing to see if it has a match\n    _.mapKeys(routingMap, (value,key)=>{\n      console.log(\"Checking key: \", key, curr.name);\n      console.log(message[1].name.startsWith(key));\n      if(message[1].name.startsWith(key)){\n        next = { name: value};\n      }\n    });\n\n    // check to see if this is the last Hop\n    if(!next && curr.name.length+2 == message[1].name.length && message[1].name.startsWith(curr.name)){\n      console.log(\"almost there!\");\n      console.log(\"to:\",message[1].name,\"from:\",curr.name);\n      //2.1 && 2.1.3 || 2 && 2.1 with hit this i think.\n      next= message[1];\n    }\n    else if( !next ){\n      next ={name: routingMap[\"*\"] };\n    }\n\n    console.log(\"we chose next to be: \", next);\n    return next;\n  }\n\n  /* animate one step:\n  brings up the routing table one at atime and does some stuff.\n  */\n  animateOneStep(){\n    let localTable = this.state.tableShown;\n    if(this.props.message[0].name===this.holder.name){\n      this.resetField();\n    }\n    var nextHop = this.findNextRouter(this.holder,this.props.message);\n\n    var el = this.state.tableShown;\n    el[this.holder.name]=0;\n    el[nextHop.name]=1;\n    // update the shown tables\n    this.setState({\n      tableShown: el\n    });\n\n    this.holder=nextHop;\n    if(this.props.message[1].name!==this.holder.name){\n      this.synchronousAnimate();\n    }\n  }\n\n\n\n  resetField(){\n    console.log(\"== RESETING Field, so all tables dont show\");\n    var el = this.state.tableShown;\n    el = _.mapKeys( el, (key,value)=>{\n      el[key]=0;\n    });\n    el[this.props.message[0].name]=1;\n    el[this.props.message[1].name]=1;\n\n\n\n    this.setState({\n      tableShown: el,\n    })\n  }\n\n  synchronousAnimate(){\n    var self= this;\n\n    console.log(\"while loop compare\",this.props.message[1].name,this.holder.name);\n    setTimeout(function(){ self.animateOneStep(); }, 1000); // make em think the computer\n\n\n  }\n\n  componentDidUpdate(prevProps){\n    if(this.props.initiated){\n      if(this.state.dontInterrupt){\n        return;\n      }\n      else{\n        this.setState({\n          holder: this.props.holder,\n          dontInterrupt: true,\n        });\n        this.holder = this.props.holder;\n        this.synchronousAnimate();\n      }\n    }\n  }\n  render(){\n    return(\n      <article style={{width:\"100%\"}}>\n      <p> Not to Scale </p>\n        <svg key=\"asdf\" id=\"svgworld\" >\n          {this.renderLines()}\n          {this.renderNodes()}\n        </svg>\n        <div>\n        {this.renderTables()}\n        </div>\n      </article>\n    );\n  }\n\n}\n\nfunction mapDispatchToProps(dispatch){\n  return {\n    animateAction: (arr,curr) => {\n      dispatch(animateAction(arr,curr));\n    },\n    doneAnimating: ()=>{\n      dispatch(doneAnimating());\n    }\n  }\n}\n\nfunction mapStateToProps(state){\n\n\n  if(state.search.animating){\n    console.log(\"ANIMATING\");\n  }\n\n  return {\n    message: state.search.data,\n    holder: state.search.current,\n    initiated: state.search.initiated,\n    ...state.search\n  }\n\n}\n\n\nexport default connect(mapStateToProps,mapDispatchToProps)(SvgField);\n","import _ from \"lodash\"\n\n\n\n///////////////////////////////////\n\nfunction flipOpposite(opposite){\n  var flip = {};\n  console.log(\"opposite[1.4]: \", opposite['1.4']);\n  _.mapKeys(opposite, (value,key) => {\n    flip[key] = reverseOneLookUpTable(key,value);\n  })\n  return flip;\n}\n\nfunction combinePrefixWithKey(prefixs, parentKey)\n{\n  var reverse= {};\n  _.mapKeys(prefixs, (value,key)=>{\n    reverse[key] = parentKey;\n  })\n  return reverse;\n}\n\nfunction reverseOneLookUpTable(startPoint, table){\n  var newTable = {};\n  var prefixs={};\n  var wildCard={};//there will alwasy be on\n  _.mapKeys(table, (value, key)=>{\n    // undefined means the route to itself\n    if(key!=='undefined' ){\n      // very hardcoded way to filter out the junk arrays\n      if(value.length>1 && value.length<20){\n        prefixs = optimizeOnesStrings(value,key);\n        // console.log(\"prefixes for: \", startPoint,prefixs);\n        // console.log(\"reduced table for \",startPoint,newTable);\n        newTable = combinePrefixWithKey(prefixs,key)\n      }\n      if(value.length>20){\n        wildCard[\"*\"]=key;\n      }\n    }\n    // console.log(`${key} is the next hop from ${startPoint} to all these:`,newTable[key] );\n  })\n\n  Object.assign(newTable,wildCard);\n  return newTable;\n\n}\n\nfunction optimizeOnesStrings(stringArr,nextHop){\n  var prefixs = {\n  };\n  _.map(stringArr, (str)=>{\n    switch(str.length){\n      case 1:\n      prefixs[str] = nextHop;\n      //getSubstrings(stringArr,str);\n        break;\n      case 3:\n        prefixs[str] = nextHop;\n        //getSubstrings(stringArr,str);\n        break;\n      default:\n        break;\n    }\n  });\n  return prefixs;\n}\n\n\nfunction filterOneLookUpTable(one){\n  var el = {};\n  _.mapKeys(one, (value,key)=>{\n    if(el[String(value[0])]){\n      el[value[0]].push(key);\n    }\n    else{\n      el[String(value[0])] = [];\n      el[value[0]].push(key);\n    }\n  });\n  return el;\n}\n\n\n\nasync function FilterAll(lotsofdata){\n  var opposite = {}\n  // console.log(\"one 1: \" , lotsofdata['1'].routTable);\n  _.mapKeys(lotsofdata, (value,key)=>{\n    opposite[key] = filterOneLookUpTable(value.routTable);\n  })\n  return flipOpposite(opposite);\n}\n\n\n\nasync function filterDickstraTable(data, callback){\n    var newTables = await FilterAll(data);\n    setTimeout(function(){ callback(newTables) }, 1000); // make em think the computer\n    //is thinking\n}\n\n\nexport default filterDickstraTable\n","import React, { Component } from 'react';\nimport './App.css';\nimport SvgField from \"./components/svgField\";\n\nimport filterDickstraTable from \"./power/longestPrefixFilter\";\nimport {animateAction} from \"./actions/search\"\nimport {connect} from 'react-redux'\nclass App extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      doneComputing: false,\n      table: this.props.lookup,\n      listening: false,\n    }\n    this.setDoneComp=this.setDoneComp.bind(this);\n    this.numSelected=0;\n    this.fromTo=[];\n  }\n\n  componentDidMount(){\n    /// send in the data, and the callback\n    filterDickstraTable(this.props.lookup,this.setDoneComp);\n  }\n\n  setDoneComp(data){\n    this.setState({\n      doneComputing: true,\n      table: data,\n      animating: false,\n    })\n  }\n  animate(){\n    // does the sequece of events\n    this.setState({\n      animating: true\n    })\n    }\n\n  /*When the user clicks a router and they are in listening mode,\n  it will wait for 2 clicks, which specifiy a to, from,\n  after that iwill set listening to FALSE and reset the numSelected\n  */\n  addToAnimateList(info){\n    if(this.state.listening){\n      if(!this.state.animating){\n        if(this.numSelected===1){\n          this.fromTo.push(info);\n          console.log(\"FROMTO: \", this.fromTo);\n          this.animate();\n          this.numSelected=0;\n\n          this.setState({\n            listening: false\n          });\n          this.props.animateAction(this.fromTo,this.fromTo[0])\n        }\n        else{\n          this.fromTo.push(info);\n          this.numSelected++;\n        }\n      }\n    }\n    else{\n      return;\n    }\n  }\n\n  listenForTwo(){\n    this.setState({\n      listening: true\n    });\n    console.log(\"time to listen\");\n  }\n\n  render() {\n\n    return (\n      <div>\n        {this.state.doneComputing && <SvgField addToGroup={(info)=>{this.addToAnimateList(info)} } dickstra={this.state.table} routerarr={this.props.arr} TABLE_DIMS={135} routers={this.props.field}/>}\n        {!this.state.doneComputing && <h4> Loading... </h4> }\n        <div className=\"interact-button\">\n        <input onClick={()=>{this.listenForTwo()} } type={\"button\"} name={\"select-route\"} />\n        <label htmlFor={'select-route'}>from, to</label>\n        <p>Click here to start the selection process</p>\n        </div>\n      </div>\n    );\n  }\n}\nfunction mapStateToProps(state){\n  console.log(\"is animting done?\", !state.search.animating);\n  return {\n    animating: state.search.animating\n  }\n}\n\nfunction mapDispatchToProps(dispatch){\n  return {\n    animateAction: (arr,curr) => {\n      dispatch(animateAction(arr,curr))\n    }\n  }\n}\n\nexport default connect(mapStateToProps,mapDispatchToProps)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","/*\nAuthor:  github.com/jpillora\ndate: Feb 27, 2014\nhttps://gist.github.com/jpillora/7382441\n\ndesc: comes up with the paths needed to reach a certain pointin the graph,\nwritten in javascript.\n*/\n\n\nfunction solve(graph, s) {\n  var solutions = {};\n  solutions[s] = [];\n  solutions[s].dist = 0;\n\n  while(true) {\n    var parent = null;\n    var nearest = null;\n    var dist = Infinity;\n\n    //for each existing solution\n    for(var n in solutions) {\n      if(!solutions[n])\n        continue\n      var ndist = solutions[n].dist;\n      var adj = graph[n];\n      //for each of its adjacent nodes...\n      for(var a in adj) {\n        //without a solution already...\n        if(solutions[a])\n          continue;\n        //choose nearest node with lowest *total* cost\n        var d = adj[a] + ndist;\n        if(d < dist) {\n          //reference parent\n          parent = solutions[n];\n          nearest = a;\n          dist = d;\n        }\n      }\n    }\n\n    //no more solutions\n    if(dist === Infinity) {\n        break;\n    }\n\n    //extend parent's solution path\n    solutions[nearest] = parent.concat(nearest);\n    //extend parent's cost\n    solutions[nearest].dist = dist;\n  }\n\n  return solutions;\n}\n//create graph\nvar graph = {};\n\nvar layout = {\n  'R': ['2'],\n  '2': ['3','4'],\n  '3': ['4','6','13'],\n  '4': ['5','8'],\n  '5': ['7','11'],\n  '6': ['13','15'],\n  '7': ['10'],\n  '8': ['11','13'],\n  '9': ['14'],\n  '10': [],\n  '11': ['12'],\n  '12': [],\n  '13': ['14'],\n  '14': [],\n  '15': []\n}\n\n//convert uni-directional to bi-directional graph\n// needs to look like: where: { a: { b: cost of a->b }\n// var graph = {\n//     a: {e:1, b:1, g:3},\n//     b: {a:1, c:1},\n//     c: {b:1, d:1},\n//     d: {c:1, e:1},\n//     e: {d:1, a:1},\n//     f: {g:1, h:1},\n//     g: {a:3, f:1},\n//     h: {f:1}\n// };\n\nfor(var id in layout) {\n  if(!graph[id])\n    graph[id] = {};\n  layout[id].forEach(function(aid) {\n    graph[id][aid] = 1;\n    if(!graph[aid])\n      graph[aid] = {};\n    graph[aid][id] = 1;\n  });\n}\n\n\n// From '10' to\n//  -> 2: [7, 5, 4, 2]   (dist:4)\n//  -> 3: [7, 5, 4, 3]   (dist:4)\n//  -> 4: [7, 5, 4]   (dist:3)\n//  -> 5: [7, 5]   (dist:2)\n//  -> 6: [7, 5, 4, 3, 6]   (dist:5)\n//  -> 7: [7]   (dist:1)\n//  -> 8: [7, 5, 4, 8]   (dist:4)\n//  -> 9: [7, 5, 4, 3, 13, 14, 9]   (dist:7)\n//  -> 10: []   (dist:0)\n//  -> 11: [7, 5, 11]   (dist:3)\n//  -> 12: [7, 5, 11, 12]   (dist:4)\n//  -> 13: [7, 5, 4, 3, 13]   (dist:5)\n//  -> 14: [7, 5, 4, 3, 13, 14]   (dist:6)\n//  -> 15: [7, 5, 4, 3, 6, 15]   (dist:6)\n//  -> R: [7, 5, 4, 2, R]   (dist:5)\n\nexport { solve }\n","import _ from \"lodash\";\nimport { solve } from \"./dijsktra\";\n\nimport LOCALE_DATA from \"../data/routers\"\n// #G Global variables\n// #\n// #\n// #\nvar pi = Math.PI\n\n/*return a random distance based on stuff,\nanchor to anchor is like overseas, has the most distance\nparent to parent is like within the same contenient, edium distance.\nparent to subnet is like within the same province, lease distance.\n\n*/\nfunction randomDistance(type){\n  var dist=0;\n  switch(type){\n    case \"subnet\":\n      dist = Math.floor(Math.random()*10+1);\n      break;\n    case \"parent\":\n      dist = Math.floor(Math.random()*60+20);\n      break;\n    case \"anchor\":\n      dist = Math.floor(Math.random()*800+100);\n      break;\n    default:\n    break;\n  }\n\n  return dist;\n}\n\n// ## reimplemnation of deepcopy\n// # only works on arrays.\n// #Desc: a recursive funciton that works with any dimensional array\nfunction dcopy(val){\n    var newarr=[];\n    if(Array.isArray(val)){\n        for(var i=0;i<val.length;i++){\n            newarr.push(dcopy(val[i]));\n        }\n        return newarr;\n    }\n    else{\n        return val;\n      }\n}\n\nfunction randint(beg,end){\n    var num = Math.random()*(end-beg)+beg;\n    num= Math.floor(num);\n    return num;\n  }\n\nfunction addVectors(a,b){\n  var newarry=[]\n  for(var el=0;el<a.length;el++){\n    newarry[el]=a[el]+b[el];\n  }\n  return newarry;\n}\n\nfunction multiplyScalar(a,val){\n  return a.map( (el) => el*val );\n}\n\n\n// #Subnet class\n// # returns subnet based on params\n// #Params:\n// #   theta_i\n// #   theta_f\n// #   amount\n// #   seperation_min\n// # dsaf\nclass subnet{\n    constructor(theta_i,theta_f,amount=5,identity=Infinity){\n        this.addresses=[]\n        this.theta_i=theta_i\n        this.theta_f=theta_f\n        this.amount=amount\n        this.seprtn_max=(theta_f-theta_i)/amount //# the amount of degrees they can be seperated max\n        this.cluster=[]\n        for(var i=0;i<amount;i++){\n          this.cluster.push({\n            connections: [],\n            name: \"\"+identity+\".\"+i,\n            radius: 0.75,\n            pos: [],\n            axis: [0,0,0.25]\n          })\n        }\n\n    }\n    export(array){\n      var info={};\n      for(var r =0;r<this.cluster.length;r++){\n        info.name=this.cluster[r].name;\n        info.addr=this.addresses[r];\n        info.dims=this.cluster[r].radius;\n        info.loc={};\n        info.loc.x=this.cluster[r].pos[0];\n        info.loc.y=this.cluster[r].pos[1];\n        info.connections=this.cluster[r].connections;\n        array.push(JSON.parse(JSON.stringify(info)));\n       }\n    }\n\n    setCluster(cords=[0,0,0]){\n      var offset;\n        for(var r =0;r<this.amount;r++){\n            offset = [Math.cos(this.seprtn_max*r+this.theta_i),Math.sin(this.seprtn_max*r+this.theta_i),0];\n            offset = multiplyScalar(offset,this.cluster[0].radius*10);\n            this.cluster[r].pos=addVectors(cords,offset);\n          }\n        return\n    }\n\n    setPrefixies(prefix){\n      var addr=[];\n      for(var i=0;i<this.cluster.length;i++){\n            // ## my bootleg way of making a deep copy each time.\n            addr.push(Number(prefix[0]));\n            addr.push(Number(prefix[1]));\n            addr.push(Number(prefix[2]));\n            addr.push(Number(prefix[3])+i+1);\n            this.addresses.push(dcopy(addr));\n\n        }\n        return;\n      }\n\n}\n\n\nclass parentRouter{\n    constructor(amount_subnet=5,pos_=[0,0,0],identity=Infinity){\n        this.connections=[];\n        this.pos=pos_;\n        this.router={\n          name: \"\"+identity,\n          radius: 0.75,\n          pos: pos_,\n          axis: [0,0,0.25]\n        }\n        this.amount=amount_subnet;\n      }\n\n    createSubnet(t_i,t_f){\n        this.net = new subnet(t_i,t_f,this.amount,this.router.name);\n        this.net.setCluster(this.pos);\n\n        for(var i=0;i<this.net.cluster.length;i++){\n          this.connections.push(this.net.cluster[i].name);\n          this.net.cluster[i].connections.push(this.router.name);\n        }\n      }\n\n    setPrefix(prefix){\n        var temp = dcopy(prefix);\n        temp[2] = (Number(temp[2]+1));\n        this.prefix = temp;\n        this.net.setPrefixies(dcopy(this.prefix));\n      }\n\n      export(array){\n        this.net.export(array);\n      }\n\n}\n\n// # a five pointed star with on point being the anchor to another start,\n// # 0 equals top, 1 equals right and so on till clockwise. the anchor does not have subnet\n// # anchor also is lrger.\nclass star{\n    constructor(anchor=0,center=[0,0,0],identity=Infinity){\n        this.anch=anchor;\n        this.star_points=new Array(5);\n        this.center=center;\n        this.star_radius = 5;\n        this.name=\"\"+identity;\n        this.connections=[];\n        this.router={\n          connections: [],\n          name: this.name\n        }\n\n        var _pos,temp;\n        for(var i=0;i<5;i++){\n            if(i !== this.anch){\n                _pos = multiplyScalar([Math.cos(i*2*pi/5+pi/2),Math.sin(i*2*pi/5+pi/2),0],this.star_radius);\n                _pos = addVectors(center,_pos);\n                temp = new parentRouter(randint(2,6),_pos,this.name+\".\"+i)\n                temp.createSubnet(i*2*pi/5+pi/2   -pi/6-pi/8, i*2*pi/5+pi/2   +pi/6+pi/8)\n                this.star_points[i]=(temp);\n              }\n        }\n        this.star_points[this.anch]=this;\n        for(i=0;i<5;i++){\n          if(i !== this.anch){\n            this.addConnection(i,this.star_points[i]);\n          }\n        }\n        this.setAnchor();\n        this.connectAnchor();\n      }\n    // addes the names of 2 routers to the specified router,\n    // basically the left and right router.\n    //\n    connectAnchor(){\n      if(this.anch===0){\n        this.connections.push(this.star_points[4].router.name);\n      }\n      else{\n        this.connections.push(this.star_points[this.anch-1].router.name);\n      }\n      //to the right of\n      if(this.anch===4){\n        this.connections.push(this.star_points[0].router.name);\n\n      }\n      else{\n        this.connections.push(this.star_points[this.anch+1].router.name);\n      }\n    }\n    addConnection(index,router){\n      // to the left of\n      if(index===0){\n        router.connections.push(this.star_points[4].router.name);\n      }\n      else{\n        router.connections.push(this.star_points[index-1].router.name);\n      }\n      //to the right of\n      if(index===4){\n        router.connections.push(this.star_points[0].router.name);\n\n      }\n      else{\n        router.connections.push(this.star_points[index+1].router.name);\n      }\n\n    }\n\n    setAnchor(){\n        var _pos=[Math.cos(pi/2 + 2*pi/5 * this.anch),Math.sin(pi/2 + 2*pi/5 * this.anch),0]\n        _pos=multiplyScalar(_pos,this.star_radius)\n        _pos=addVectors(_pos,this.center);\n        this.anchor={\n          radius: 1.25,\n          pos: _pos,\n          axis: [0,0,0.25]\n        }\n        return\n      }\n    //\n    // #a recursive almost function\n    // # based on the value that it receives and the amount dedicated to the subnet, it does that\n    setAllAddresses(anchorAddress){\n        this.prefix=anchorAddress.split('.') //# this will also be the address of the anchor\n        for(var i =0;i<this.star_points.length;i++){\n          if(i !== this.anch)\n            this.star_points[i].setPrefix(anchorAddress.split('.'))\n          }\n        return\n      }\n      export(array,index){\n        var info={};\n        info.name=this.star_points[index].router.name;\n        info.dims=this.star_points[index].router.radius;\n        info.loc={};\n        info.loc.x=this.star_points[index].router.pos[0];\n        info.loc.y=this.star_points[index].router.pos[1];\n        info.connections=this.star_points[index].connections;\n        array.push(JSON.parse(JSON.stringify(info)));\n      }\n\n      exportIdentities(array){\n        var info={};\n        info.name=this.name;\n        info.dims=this.anchor.radius;\n        info.loc={};\n        info.loc.x=this.anchor.pos[0];\n        info.loc.y=this.anchor.pos[1];\n        info.connections=this.connections;\n        array.push(JSON.parse(JSON.stringify(info)));\n        for(var i=0;i<this.star_points.length;i++){\n          if(i !== this.anch){\n            this.export(array,i);\n            this.star_points[i].export(array);\n          }\n        }\n\n        return array;\n\n      }\n}\n\n\n\nfunction buildStars(){\n  var stars = [];\n  stars.push(new star(3,[-15,15,0],0));\n  stars.push(new star(2,[15,15,0],1));\n  stars.push(new star(0,[0,-15,0],2));\n\n  stars[0].setAllAddresses(\"69.47.00.00\")\n  stars[1].setAllAddresses(\"69.48.00.00\")\n  stars[2].setAllAddresses(\"69.49.00.00\")\n  stars[0].connections.push(stars[1].name);\n  stars[0].connections.push(stars[2].name);\n  stars[1].connections.push(stars[0].name);\n  stars[1].connections.push(stars[2].name);\n  stars[2].connections.push(stars[1].name);\n  stars[2].connections.push(stars[0].name);\n  // builds the classes and throws them into the scope with the callback\n  return stars;\n}\n\nfunction connectionType(num1,num2){\n  var val = (num1>num2) ? num1 : num2;\n  switch(val){\n    case 1:\n      return \"anchor\";\n    case 3:\n      return \"parent\";\n    default:\n      return \"subnet\";\n  }\n}\n//\n// function optimizeConnections(routers){\n//   var connDict = {};\n//\n//   _.map(routers,( { name, connections })=>{\n//\n//     connections.forEach( (el, index) =>{\n//       if( !connDict[name+el] || !connDict[el+name]){\n//         connDict[(name+el).toString()] = {\n//           link: [name,el],\n//           dist: randomDistance(connectionType(name.length,el.length))\n//         }\n//       }\n//     });\n//\n//   });\n//\n//   console.log(\"dictionary of connections: \", connDict);\n//\n// }\n//convert uni-directional to bi-directional graph\n// needs to look like: where: { a: { b: cost of a->b }\n// var graph = {\n//     a: {e:1, b:1, g:3},\n//     b: {a:1, c:1},\n//     c: {b:1, d:1},\n//     d: {c:1, e:1},\n//     e: {d:1, a:1},\n//     f: {g:1, h:1},\n//     g: {a:3, f:1},\n//     h: {f:1}\n// };\nfunction formatForDijkstra(routers){\n  var connDict = {}\n\n  _.map(routers, ({ name, connections}) =>{\n      if(connDict[name]){\n        connections.forEach( (el,index) =>{\n          if(!connDict[name][el]){\n            connDict[name][el] = randomDistance(connectionType(name.length,el.length));\n          }\n        });\n      }\n      else{\n        connDict[name]={}\n        connections.forEach( (el,index) =>{\n          if(!connDict[name][el]){\n            connDict[name][el] = randomDistance(connectionType(name.length,el.length));\n          }\n        });      }\n  });\n  return connDict;\n}\n\nfunction turnStarsIntoRouters(callback){\n  var stars = LOCALE_DATA ? null : buildStars();\n  var routers = [];\n  var connections = [];\n  // for(var i=0;i<stars.length;i++){\n  //   //export the info into a programmically readable format.\n  //   stars[i].exportIdentities(routers);\n  // }\n  // console.log(JSON.stringify(routers));\n  routers = LOCALE_DATA;\n\n\n  connections = formatForDijkstra(routers);\n   _.mapKeys(connections, (value, key) =>{\n    value[\"routTable\"] =  solve(connections,key);\n  });\n  // console.log(\"the info: \",finishedInfo);\n\n  // now we have a bunch of duplicated connections, presiceley, double.\n  // so now they have everything except connections.\n  var routerDict = {};\n  routers.forEach( (el, index) => {\n    if(Array.isArray(el.name))\n      el.name = el.name.join('.');\n    routerDict[el.name]=el;\n  });\n\n  callback(routerDict,routers,connections);\n\n}\n\n\n\nexport { turnStarsIntoRouters };\n","import { combineReducers } from 'redux';\nimport {PERFORMED,SEARCH_PERFORMED} from \"../actions/search\";\n\nconst initialState ={\n  animating: false,\n};\n\nfunction search(state,action) {\n  if(state === undefined){\n    return initialState;\n  }\n  else{\n    switch(action.type){\n      case SEARCH_PERFORMED:\n        var term = action.searchTerm;\n        return {\n           ...state,\n          term\n        };\n      case PERFORMED:\n        return{\n          ...state,\n          current: action.current,\n          data: action.data,\n          animating: action.animating,\n          initiated: true,\n        }\n      default:\n        return state;\n    }\n  }\n}\n\n\nexport default combineReducers({\n  search,\n});\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {turnStarsIntoRouters} from \"./power/build-star-subnet\";\nimport {Provider} from 'react-redux';\nimport {createStore, applyMiddleware} from 'redux';\nimport reducer from \"./reducers\"\nimport {createLogger} from 'redux-logger'\n// function renderPlacementField(){\n//\n// }\n\nvar Rooms;\nconst store = createStore(\n  reducer,\n  applyMiddleware(createLogger()),\n)\n\nfunction renderSvgField(rooms,array,conns){\n  Rooms = rooms;\n  ReactDOM.render(\n    <Provider store={store}>\n      <App lookup={conns} arr={array} field={Rooms}/>\n    </Provider>, document.getElementById('root'));\n}\n\n\n//Here we set the app to assign the data to a local variable\n//which is rendered in the <App />\n// buildRooms(renderSvgField);\nturnStarsIntoRouters(renderSvgField);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}